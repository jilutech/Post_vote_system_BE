name : Build and Deploy

on : [push,pull_request]

# on: 
#   push:
#     branches: ["manin_branch","feature branch"] 

# on: 
#   push:
#     branches:
#        -"main_branch"
#        -"feature_branch"
#   pull:
#      branches:
#        -"test_branches"   
#        -"test_branches"   
jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    runs-on: ubuntu-latest
    steps:
       - name: pulling git repo
         uses: actions/checkout@v2
       - name: Install python version 3.10.5
         uses: actions/setup-python@v2  
         with: 
            python-version: "3.10.5"
       - name: update pip
         run: python -m pip install --upgrade pip
       - name: install all dependencies
         run: pip install -r requirements.txt    


      #  - name: Login to Docker Hub
      #    uses: docker/login-action@v1
      #    with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      #  - name: Set up Docker Buildx
      #    id: buildx
      #    uses: docker/setup-buildx-action@v1

      #  - name: Build and push
      #    id: docker_build
      #    uses: docker/build-push-action@v2
      #    with:
      #      context: ./
      #      file: ./Dockerfile
      #      builder: ${{ steps.buildx.outputs.name }}
      #      push: true
      #      tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vote_system
      #      cache-from: type=local,src=/tmp/.buildx-cache
      #      cache-to: type=local,dest=/tmp/.buildx-cache
      #  - name: Image digest
      #    run: echo ${{ steps.docker_build.outputs.digest }}  \\
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps: 
     - name: deploying stuff
       run:  echo"testing deploy code" 
        